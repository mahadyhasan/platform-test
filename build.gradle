buildscript {
    ext.kotlin_version = '1.2.51'
    ext.spring_boot_version = '1.5.4.RELEASE'
    ext.junitVersion = "5.0.0"
    ext.junitPlatformVersion = "1.0.0"

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"

        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

group 'co.wrisk'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile project(":policy-contracts")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"

    runtime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    runtime "org.junit.platform:junit-platform-console:$junitPlatformVersion"


}

apply from: "junit5.gradle"

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}